package br.com.entra21.modelo2022.backend.area.logada.cadastros.crud;
 
import java.util.ArrayList;

import br.com.entra21.modelo2022.backend.Menu;
import br.com.entra21.modelo2022.backend.Repositorio;
import br.com.entra21.modelo2022.backend.modelos.Curso; 

public class CursoCRUD extends Menu implements ICrud<Curso>{
 
	
	ArrayList<Curso> lista;
	public CursoCRUD(String titulo) {
		super(titulo, opcoes); 
		lista=Repositorio.cursos;
		lista.add(new Curso("Metodologia ágil"));
		lista.add(new Curso("Git"));
		lista.add(new Curso("Lógica de programação"));
	}
	
	@Override
	public byte capturarOpcao() {

		byte opcao = super.capturarOpcao();
		switch (opcao) {
		case 1:  
			listar(Repositorio.cursos);
			break;
		case 2:   
			break; 
		default:
			System.out.println("Opção inválida para o menu de " + super.getTitulo());
			break;
		}
		return opcao;
	}

	@Override
	public void listar(ArrayList<Curso> lista) {
		for ( Curso curso : lista) { 
			System.out.println(curso.getNome());
		}
		
	}

	@Override
	public void adicionar() {
		Curso novo=capturarValores();
		if(buscar(novo)==null) {
			lista.add(novo);
		}else {
			System.out.println("Já existe um curso com nome:"+novo.getNome());
		}
		
	}

	@Override
	public Curso buscar(Curso chave) { 
		Curso encontrado=null;
		for ( Curso curso : lista) { 
			if(curso.getNome().equals(chave.getNome())) {
				encontrado=curso;
			}
		}
		return encontrado;
		
	}

	@Override
	public void editar() {
		Curso chave=capturarChave(); 
		Curso cursoAtual=buscar(chave); 
		if(cursoAtual==null) {
			System.out.println("Não existe um curso com nome:"+chave.getNome());
		}else {
			cursoAtual=capturarValores();
			System.out.println("Dados atualizados");
		}
	}

	@Override
	public void exluir() {
		Curso chave=capturarChave(); 
		Curso cursoAtual=buscar(chave); 
		if(cursoAtual==null) {
			System.out.println("Não existe um curso com nome:"+chave.getNome());
		}else {
			cursoAtual=capturarValores();
			System.out.println("Curso excluido");
		}
		
	}

	@Override
	public Curso capturarChave() {
		Curso formulario=new Curso();
		System.out.println("Informe o nome do curso");
		formulario.setNome(super.getEntrada().next());
		return formulario;
	}

	@Override
	public Curso capturarValores() {
		Curso formulario=new Curso();
		System.out.println("Informe o nome do curso");
		formulario.setNome(super.getEntrada().next());
		return formulario;
	}

	




	 
	
	
  

	
  
}
